/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    //- Set patchGroups for constraint patches
    #includeEtc "caseDicts/setConstraintTypes"

    inlet
    {
        /*type            codedMixed;
        refValue        $internalField;
        refGradient     uniform (0 0 0);
    	valueFraction   uniform 1;
	
        name    BoundaryLayerInletVelocity;
        code
        #{
        const fvPatch & patch = this->patch();
        const vectorField& Cf=patch.Cf();
        const scalar n=2;
        const scalar Uo=1.5;
        const scalar h=0.4;
        vector flowDir = vector(1,0,0);
       
        forAll (Cf ,faceI)
        {	
        	scalar y=Cf[faceI].y();
        	this->refValue()[faceI]=  Uo*pow(((4*y/h)*(1-(y/h))),n)*flowDir;
        	this->refGrad()[faceI] = vector(0,0,0);//Zero;
        	this->valueFraction()[faceI] = 1;
        	}
        #};*/
        type            BoundaryLayerInletVelocity; 
        flowDir	 (1 0 0);
        yDir		 (0 1 0);
        n		 2;
    	Uo		 1.5;
    	h         	 0.4;
    	value	 	(1 0 0);
    }

    outlet
    {
        type            pressureInletOutletVelocity;
        value           $internalField;
        
    }
    bottom
    {
        type            noSlip;
    }
    top
    {
        type            noSlip;
    }
}

// ************************************************************************* //
