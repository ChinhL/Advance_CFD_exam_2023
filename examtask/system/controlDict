/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     TpisoFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         10;

deltaT          0.0005;

writeControl    runTime;

writeInterval   1;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

libs (
      "libatmosphericModels.so"
      "libgroovyBC.so"
      "libOpenFOAM.so" //keep paraview happy!
      "libsimpleSwakFunctionObjects.so"
      "libswakFunctionObjects.so"
      "libswakTopoSources.so"
      "libatmBoundaryLayerTemperature.so"
      "libBoundaryLayerInletVelocity.so"
      "libusertemperatureLaw.so"
      );
functions
{

    p_inlet
    	{
            	type swakExpression;
            	libs ("libsimpleSwakFunctionObjects.so");
        	valueType patch;
        	verbose false;
        	patchName  "inlet";
        	expression "p";
        	accumulations (
            			
            			average
        		);
        	writeStartTime   no;
        	outputControlMode timeStep;
        	outputInterval 1;
        }
    p_outlet
    	{
            	type swakExpression;
            	libs ("libsimpleSwakFunctionObjects.so");
        	valueType patch;
        	verbose false;
        	patchName  "outlet";
        	expression "p";
        	accumulations (
            			
            			average
        		);
        	writeStartTime   no;
        	outputControlMode timeStep;
        	outputInterval 1;
        }
     Tbulk_up
    	{
        type swakExpression;
        libs ("libsimpleSwakFunctionObjects.so");
        valueType surface;
        verbose true;
        surfaceName x0.7;
        surface {
            type	     plane;
            planeType 	     pointAndNormal;
            basePoint       (0.7 0.0 0.0);
            normalVector    (1 0 0);
            interpolate true;
        }
        expression "T*U.x";
        accumulations (
            sum
        );
        writeStartTime    no; 
        outputControlMode timeStep;
        outputInterval 1;
    	}
    velocity_bulk
    	{
        type swakExpression;
        libs ("libsimpleSwakFunctionObjects.so");
        valueType surface;
        verbose true;
        surfaceName x0.7;
        surface {
            type	     plane;
            planeType 	     pointAndNormal;
            basePoint       (0.7 0.0 0.0);
            normalVector    (1 0 0);
            interpolate true;
        }
        expression "U.x";
        accumulations (
            sum
        );
        writeStartTime    no; 
        outputControlMode timeStep;
        outputInterval 1;
    	}
       
    
 }
// ************************************************************************* //
